const DATA = {
	map: {
		labyrinth: {
			path: ['1-1', '8-1', '8-4', '3-4', '3-8', '4-8', '4-7', '5-7', '5-8', '6-8', '6-7', '7-7', '7-8', '8-8'],
			1: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			2: {
				1: false,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: true
			},
			3: {
				1: false,
				2: true,
				3: true,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			4: {
				1: false,
				2: true,
				3: true,
				4: false,
				5: true,
				6: true,
				7: false,
				8: false
			},
			5: {
				1: false,
				2: true,
				3: true,
				4: false,
				5: true,
				6: true,
				7: false,
				8: false
			},
			6: {
				1: false,
				2: true,
				3: true,
				4: false,
				5: true,
				6: true,
				7: false,
				8: false
			},
			7: {
				1: false,
				2: true,
				3: true,
				4: false,
				5: true,
				6: true,
				7: false,
				8: false
			},
			8: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: true,
				6: true,
				7: true,
				8: false
			}
		},
		arches: {
			path: ['1-8', '1-1', '4-1', '4-8', '5-8', '5-1', '8-1', '8-8'],
			1: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			2: {
				1: false,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: true
			},
			3: {
				1: false,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: true
			},
			4: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			5: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			6: {
				1: false,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: true
			},
			7: {
				1: false,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: true
			},
			8: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			}
		},
		snake: {
			path: ['1-8', '1-1', '3-1', '3-8', '6-8', '6-1', '8-1', '8-8'],
			1: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			2: {
				1: false,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: true
			},
			3: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			4: {
				1: true,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: false
			},
			5: {
				1: true,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: false
			},
			6: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			},
			7: {
				1: false,
				2: true,
				3: true,
				4: true,
				5: true,
				6: true,
				7: true,
				8: true
			},
			8: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false,
				7: false,
				8: false
			}
		}
	},
	enemy: {
		goon: {
			health: 1,
			speed: 1,
			money: 100
		},
		mini_goon: {
			health: 1,
			speed: 4,
			money: 75
		},
		big_goon: {
			health: 3,
			speed: 1,
			money: 150
		},
		bigger_goon: {
			health: 5,
			speed: 1,
			money: 250
		},
		mega_goon: {
			health: 15,
			speed: 0.75,
			money: 500
		},
		boss_goon: {
			health: 50,
			speed: 0.75,
			money: 5000
		}
	},
	wave: {
		1: [
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2,
			'goon',
			2
		],
		2: [
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5,
			'goon',
			1.5
		],
		3: [
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5,
			'goon',
			1,
			'goon',
			0.5
		],
		4: [
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5
		],
		5: [
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2,
			'mini_goon',
			2
		],
		6: [
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5,
			'mini_goon',
			0.5,
			'goon',
			0.5,
			'goon',
			0.5
		],
		7: [
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25,
			'goon',
			0.25
		],
		8: [
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1,
			'mini_goon',
			1
		],
		9: [
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2
		],
		10: [
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125,
			'goon',
			0.125
		],
		11: [
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1,
			'big_goon',
			1,
			'mini_goon',
			1,
			'goon',
			1
		],
		12: [
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75,
			'big_goon',
			0.75
		],
		13: [
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'bigger_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2,
			'big_goon',
			2
		],
		14: [
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5,
			'bigger_goon',
			1.5
		],
		15: [
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3,
			'mega_goon',
			3
		],
		16: [
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25,
			'big_goon',
			0.25,
			'bigger_goon',
			0.25
		],
		17: [
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10,
			'boss_goon',
			10
		],
		18: [
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25,
			'bigger_goon',
			0.25
		],
		19: [
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0,
			'bigger_goon',
			0.25,
			'mini_goon',
			0
		],
		20: [
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25,
			'mega_goon',
			0.25
		],
		21: [
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1,
			'boss_goon',
			1
		]
	},
	building: {
		canon: {
			// shoots enemies
			price: 1000,
			targets: 1,
			range: 1.5,
			speed: 0.5,
			damage: 1
		},
		mini_canon: {
			// shoots enemies
			price: 1000,
			targets: 1,
			range: 3.1,
			speed: 0.5,
			damage: 0.5
		},
		tesla: {
			// electrifies enemies within range
			price: 3000,
			targets: 2,
			range: 1.5,
			speed: 3,
			damage: 0.2
		},
		poisoner: {
			// poisons in a radius of [range] and applies damage to enemies
			price: 5000,
			targets: 1000,
			range: 1.5,
			speed: 3,
			damage: 0.1
		},
		sniper: {
			// shoots an enemy from anywhere
			price: 6000,
			targets: 1,
			range: 100,
			speed: 0.1,
			damage: 4
		},
		inferno: {
			// targets one enemy and increases in damage over time until enemy is dead or out of range
			price: 4000,
			targets: 1,
			range: 2,
			speed: 50,
			damage: 0.025
		},
		mortar: {
			// targets one specific square on the map and fires onto it
			price: 2000,
			targets: 100,
			range: 100,
			speed: 2,
			damage: 0.3
		},
		radar: {
			// freezes enemies in range and does a bit of damage
			price: 4000,
			targets: 1000,
			range: 1.5,
			speed: 0.5,
			damage: 0.05
		},
		laser: {
			// fires a laser across the whole map in a straight non-diagonal line
			price: 2000,
			targets: 1000,
			range: 100,
			speed: 2,
			damage: 0.1
		}
	}
};

const VISUALS = {
	maps: {
		arches: null,
		labyrinth: null,
		snake: null
	},
	elements: {
		plain: null,
		background: null,
		selection: null,
		cross: null,
		upgrade: null,
		wave_speed: null
	},
	buildings: {
		canon: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		mini_canon: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		tesla: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		poisoner: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		sniper: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		inferno: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		mortar: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		laser: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		},
		radar: {
			0: null,
			1: null,
			2: null,
			3: null,
			4: null,
			5: null,
			6: null,
			7: null
		}
	},
	enemies: {
		goon: {
			up: null,
			right: null,
			down: null,
			left: null
		},
		mini_goon: {
			up: null,
			right: null,
			down: null,
			left: null
		},
		big_goon: {
			up: null,
			right: null,
			down: null,
			left: null
		},
		bigger_goon: {
			up: null,
			right: null,
			down: null,
			left: null
		},
		mega_goon: {
			up: null,
			right: null,
			down: null,
			left: null
		},
		boss_goon: {
			up: null,
			right: null,
			down: null,
			left: null
		}
	},
	animations: {
		explosion: null,
		death: null,
		zap: null
	}
};

const GAME = {
	wave_speed: 1,
	win: false,
	context: 0,
	selected: { x: 0, y: 0, disabled: true },
	mortar_target_select: false,
	image: null,
	path: null,
	map_data: null,
	money: 5000,
	wave: 0,
	enemies_left: [],
	spawn_cooldown: 0,
	lives: 10,
	map: {
		1: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		},
		2: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		},
		3: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		},
		4: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		},
		5: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		},
		6: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		},
		7: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		},
		8: {
			1: false,
			2: false,
			3: false,
			4: false,
			5: false,
			6: false,
			7: false,
			8: false
		}
	},
	enemies: []
};

let draw_loop = false;
let animations = [];
let wave_interval = false;

function preload() {
	VISUALS.maps.arches = loadImage('visuals/maps/arches.png');
	VISUALS.maps.labyrinth = loadImage('visuals/maps/labyrinth.png');
	VISUALS.maps.snake = loadImage('visuals/maps/snake.png');

	VISUALS.animations.explosion = loadImage('visuals/animations/explosion.png');
	VISUALS.animations.death = loadImage('visuals/animations/death.png');
	VISUALS.animations.zap = loadImage('visuals/animations/zap.png');
	VISUALS.animations.poison = loadImage('visuals/animations/poison.png');
	VISUALS.animations.fire = loadImage('visuals/animations/fire.png');

	VISUALS.elements.background = loadImage('visuals/ui/background.png');
	VISUALS.elements.plain = loadImage('visuals/ui/plain_background.png');
	VISUALS.elements.selection = loadImage('visuals/ui/selection.png');
	VISUALS.elements.cross = loadImage('visuals/ui/cross.png');
	VISUALS.elements.upgrade = loadImage('visuals/ui/upgrade.png');
	VISUALS.elements.wave_speed = loadImage('visuals/ui/wave_speed.png');

	VISUALS.buildings.canon[0] = loadImage('visuals/canon/0.png');
	VISUALS.buildings.canon[1] = loadImage('visuals/canon/1.png');
	VISUALS.buildings.canon[2] = loadImage('visuals/canon/2.png');
	VISUALS.buildings.canon[3] = loadImage('visuals/canon/3.png');
	VISUALS.buildings.canon[4] = loadImage('visuals/canon/4.png');
	VISUALS.buildings.canon[5] = loadImage('visuals/canon/5.png');
	VISUALS.buildings.canon[6] = loadImage('visuals/canon/6.png');
	VISUALS.buildings.canon[7] = loadImage('visuals/canon/7.png');

	VISUALS.buildings.mini_canon[0] = loadImage('visuals/mini_canon/0.png');
	VISUALS.buildings.mini_canon[1] = loadImage('visuals/mini_canon/1.png');
	VISUALS.buildings.mini_canon[2] = loadImage('visuals/mini_canon/2.png');
	VISUALS.buildings.mini_canon[3] = loadImage('visuals/mini_canon/3.png');
	VISUALS.buildings.mini_canon[4] = loadImage('visuals/mini_canon/4.png');
	VISUALS.buildings.mini_canon[5] = loadImage('visuals/mini_canon/5.png');
	VISUALS.buildings.mini_canon[6] = loadImage('visuals/mini_canon/6.png');
	VISUALS.buildings.mini_canon[7] = loadImage('visuals/mini_canon/7.png');

	VISUALS.buildings.tesla[0] = loadImage('visuals/tesla/0.png');
	VISUALS.buildings.tesla[1] = loadImage('visuals/tesla/1.png');
	VISUALS.buildings.tesla[2] = loadImage('visuals/tesla/2.png');
	VISUALS.buildings.tesla[3] = loadImage('visuals/tesla/3.png');
	VISUALS.buildings.tesla[4] = loadImage('visuals/tesla/4.png');
	VISUALS.buildings.tesla[5] = loadImage('visuals/tesla/5.png');
	VISUALS.buildings.tesla[6] = loadImage('visuals/tesla/6.png');
	VISUALS.buildings.tesla[7] = loadImage('visuals/tesla/7.png');

	VISUALS.buildings.poisoner[0] = loadImage('visuals/poisoner/0.png');
	VISUALS.buildings.poisoner[1] = loadImage('visuals/poisoner/1.png');
	VISUALS.buildings.poisoner[2] = loadImage('visuals/poisoner/2.png');
	VISUALS.buildings.poisoner[3] = loadImage('visuals/poisoner/3.png');
	VISUALS.buildings.poisoner[4] = loadImage('visuals/poisoner/4.png');
	VISUALS.buildings.poisoner[5] = loadImage('visuals/poisoner/5.png');
	VISUALS.buildings.poisoner[6] = loadImage('visuals/poisoner/6.png');
	VISUALS.buildings.poisoner[7] = loadImage('visuals/poisoner/7.png');

	VISUALS.buildings.sniper[0] = loadImage('visuals/sniper/0.png');
	VISUALS.buildings.sniper[1] = loadImage('visuals/sniper/1.png');
	VISUALS.buildings.sniper[2] = loadImage('visuals/sniper/2.png');
	VISUALS.buildings.sniper[3] = loadImage('visuals/sniper/3.png');
	VISUALS.buildings.sniper[4] = loadImage('visuals/sniper/4.png');
	VISUALS.buildings.sniper[5] = loadImage('visuals/sniper/5.png');
	VISUALS.buildings.sniper[6] = loadImage('visuals/sniper/6.png');
	VISUALS.buildings.sniper[7] = loadImage('visuals/sniper/7.png');

	VISUALS.buildings.inferno[0] = loadImage('visuals/inferno/0.png');
	VISUALS.buildings.inferno[1] = loadImage('visuals/inferno/1.png');
	VISUALS.buildings.inferno[2] = loadImage('visuals/inferno/2.png');
	VISUALS.buildings.inferno[3] = loadImage('visuals/inferno/3.png');
	VISUALS.buildings.inferno[4] = loadImage('visuals/inferno/4.png');
	VISUALS.buildings.inferno[5] = loadImage('visuals/inferno/5.png');
	VISUALS.buildings.inferno[6] = loadImage('visuals/inferno/6.png');
	VISUALS.buildings.inferno[7] = loadImage('visuals/inferno/7.png');

	VISUALS.buildings.mortar[0] = loadImage('visuals/mortar/0.png');
	VISUALS.buildings.mortar[1] = loadImage('visuals/mortar/1.png');
	VISUALS.buildings.mortar[2] = loadImage('visuals/mortar/2.png');
	VISUALS.buildings.mortar[3] = loadImage('visuals/mortar/3.png');
	VISUALS.buildings.mortar[4] = loadImage('visuals/mortar/4.png');
	VISUALS.buildings.mortar[5] = loadImage('visuals/mortar/5.png');
	VISUALS.buildings.mortar[6] = loadImage('visuals/mortar/6.png');
	VISUALS.buildings.mortar[7] = loadImage('visuals/mortar/7.png');

	VISUALS.buildings.laser[0] = loadImage('visuals/laser/0.png');
	VISUALS.buildings.laser[1] = loadImage('visuals/laser/1.png');
	VISUALS.buildings.laser[2] = loadImage('visuals/laser/2.png');
	VISUALS.buildings.laser[3] = loadImage('visuals/laser/3.png');
	VISUALS.buildings.laser[4] = loadImage('visuals/laser/4.png');
	VISUALS.buildings.laser[5] = loadImage('visuals/laser/5.png');
	VISUALS.buildings.laser[6] = loadImage('visuals/laser/6.png');
	VISUALS.buildings.laser[7] = loadImage('visuals/laser/7.png');

	VISUALS.buildings.radar[0] = loadImage('visuals/radar/0.png');
	VISUALS.buildings.radar[1] = loadImage('visuals/radar/1.png');
	VISUALS.buildings.radar[2] = loadImage('visuals/radar/2.png');
	VISUALS.buildings.radar[3] = loadImage('visuals/radar/3.png');
	VISUALS.buildings.radar[4] = loadImage('visuals/radar/4.png');
	VISUALS.buildings.radar[5] = loadImage('visuals/radar/5.png');
	VISUALS.buildings.radar[6] = loadImage('visuals/radar/6.png');
	VISUALS.buildings.radar[7] = loadImage('visuals/radar/7.png');

	VISUALS.enemies.goon.up = loadImage('visuals/enemy/goon/up.png');
	VISUALS.enemies.goon.right = loadImage('visuals/enemy/goon/right.png');
	VISUALS.enemies.goon.down = loadImage('visuals/enemy/goon/down.png');
	VISUALS.enemies.goon.left = loadImage('visuals/enemy/goon/left.png');

	VISUALS.enemies.mini_goon.up = loadImage('visuals/enemy/mini_goon/up.png');
	VISUALS.enemies.mini_goon.right = loadImage('visuals/enemy/mini_goon/right.png');
	VISUALS.enemies.mini_goon.down = loadImage('visuals/enemy/mini_goon/down.png');
	VISUALS.enemies.mini_goon.left = loadImage('visuals/enemy/mini_goon/left.png');

	VISUALS.enemies.big_goon.up = loadImage('visuals/enemy/big_goon/up.png');
	VISUALS.enemies.big_goon.right = loadImage('visuals/enemy/big_goon/right.png');
	VISUALS.enemies.big_goon.down = loadImage('visuals/enemy/big_goon/down.png');
	VISUALS.enemies.big_goon.left = loadImage('visuals/enemy/big_goon/left.png');

	VISUALS.enemies.bigger_goon.up = loadImage('visuals/enemy/bigger_goon/up.png');
	VISUALS.enemies.bigger_goon.right = loadImage('visuals/enemy/bigger_goon/right.png');
	VISUALS.enemies.bigger_goon.down = loadImage('visuals/enemy/bigger_goon/down.png');
	VISUALS.enemies.bigger_goon.left = loadImage('visuals/enemy/bigger_goon/left.png');

	VISUALS.enemies.mega_goon.up = loadImage('visuals/enemy/mega_goon/up.png');
	VISUALS.enemies.mega_goon.right = loadImage('visuals/enemy/mega_goon/right.png');
	VISUALS.enemies.mega_goon.down = loadImage('visuals/enemy/mega_goon/down.png');
	VISUALS.enemies.mega_goon.left = loadImage('visuals/enemy/mega_goon/left.png');

	VISUALS.enemies.boss_goon.up = loadImage('visuals/enemy/boss_goon/up.png');
	VISUALS.enemies.boss_goon.right = loadImage('visuals/enemy/boss_goon/right.png');
	VISUALS.enemies.boss_goon.down = loadImage('visuals/enemy/boss_goon/down.png');
	VISUALS.enemies.boss_goon.left = loadImage('visuals/enemy/boss_goon/left.png');
}

function setup() {
	createCanvas(1920, 1080);

	noStroke();
	textAlign(CENTER);
	textFont('Courier New');
	textSize(100);
	frameRate(50);
	textStyle(BOLD);

	image(VISUALS.elements.plain, 0, 0);

	text('Select a Map:', 960, 150);

	textSize(40);

	image(VISUALS.maps.arches, 105, 200, 500, 500);
	image(VISUALS.maps.labyrinth, 710, 200, 500, 500);
	image(VISUALS.maps.snake, 1315, 200, 500, 500);

	text('Arches', 355, 760);
	text('Labyrinth', 960, 760);
	text('Snake', 1565, 760);

	image(VISUALS.elements.wave_speed, 735, 875, 450, 150);

	text('Wave Speed (Selected: ' + GAME.wave_speed + 'x)', 960, 850);
	text('1x', 810, 960);
	text('2x', 960, 960);
	text('4x', 1110, 960);
}

function angle_translation(angle) {
	angle = ((angle % 360) + 360) % 360;

	const directions = ['7', '6', '5', '4', '3', '2', '1', '0'];

	const index = Math.round(angle / 45) % 8;

	return directions[index];
}

function compress_number(number) {
	let compressed = 0;
	if (number < 1000) {
		compressed = parseInt(number) + '$';
	} else if (number < 1000000) {
		compressed = (number / 1000).toFixed(1) + 'K';
	} else if (number < 1000000000) {
		compressed = (number / 1000000).toFixed(1) + 'M';
	} else if (number < 1000000000000) {
		compressed = (number / 1000000000).toFixed(1) + 'B';
	}

	if (compressed.length === 6) {
		return compressed.substring(0, 3) + compressed.substring(5);
	}
	return compressed;
}

function draw() {
	// map selection?
	if (!draw_loop) {
		// Game over?
		if (GAME.context === 6) {
			if (GAME.lives > 0) {
				GAME.win = true;
			}
			textSize(200);
			image(VISUALS.elements.plain, 0, 0);
			if (GAME.win) {
				text('YOU WIN! :)', 960, 200);
			} else {
				text('YOU LOSE! :(', 960, 200);
			}
			textSize(100);
			text('Wave: ' + GAME.wave, 960, 400);
			text('Lives: ' + GAME.lives, 960, 500);
		}
		return;
	}

	if (!wave_interval) {
		setInterval(move_enemies, 50);
		wave_interval = true;
	}

	// update context
	if (GAME.selected.disabled) {
		GAME.context = 1;
	} else if (GAME.lives === 0 || GAME.wave === 22) {
		draw_loop = false;
		GAME.context = 6;
	} else {
		let square_status = GAME.map_data[GAME.selected.x + 1][GAME.selected.y + 1];
		if (square_status === true) {
			GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] ? (GAME.context = 4) : (GAME.context = 2);
		} else {
			GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] ? (GAME.context = 5) : (GAME.context = 3);
		}
	}

	// reset
	image(VISUALS.elements.background, 0, 0);

	// map
	image(GAME.image, 25, 25);

	// game data
	textSize(50);
	textStyle(BOLD);

	text(compress_number(GAME.money), 1135, 168);
	text(GAME.wave, 1135, 298);
	text(GAME.lives, 1135, 428);

	// information
	textSize(40);

	if (GAME.context === 1) {
		text('Select a square\non the map to either\nbuild or upgrade a\ntrap / tower.', 1553, 205);
	} else if (GAME.context === 2) {
		text('Click on one of the\ntowers below to buy\nand place it on the\nselected square', 1553, 205);
	} else if (GAME.context === 3) {
		text('Click on one of the\ntraps below to buy\nand place it on the\nselected square', 1553, 205);
	} else if (GAME.context === 4) {
		text(GAME.map[GAME.selected.x + 1][GAME.selected.y + 1].name.toUpperCase(), 1553, 205);
		text('Upgrade or sell the\nselected tower', 1553, 305);
	} else if (GAME.context === 5) {
		text(GAME.map[GAME.selected.x + 1][GAME.selected.y + 1].name.toUpperCase(), 1553, 205);
		text('Sell the selected trap', 1553, 330);
	}

	// highlight selected square
	if (!GAME.selected.disabled) {
		image(VISUALS.elements.selection, 61 + GAME.selected.x * 120, 61 + GAME.selected.y * 120);
	}

	// show towers
	for (let i of Object.keys(GAME.map)) {
		for (let j of Object.keys(GAME.map[i])) {
			if (GAME.map[i][j]) {
				image(
					VISUALS.buildings[GAME.map[i][j].name][GAME.map[i][j].angle],
					65 + i * 120 - 120,
					65 + j * 120 - 120,
					80,
					80
				);
			}
		}
	}

	// show / update enemies
	for (let i of GAME.enemies) {
		if (i.health <= 0) {
			GAME.money += DATA.enemy[i.type].money;
			GAME.enemies.splice(GAME.enemies.indexOf(i), 1);
			animations.push('death:' + i.coords + ':10');
		}
		image(
			VISUALS.enemies[i.type][i.facing],
			65 + (i.coords.split('-')[0] - 1) * 120,
			65 + (i.coords.split('-')[1] - 1) * 120
		);
	}

	// show animations
	updated = [];
	for (let i of animations) {
		if (i.split(':')[2] > 0) {
			image(
				VISUALS.animations[i.split(':')[0]],
				65 + i.split(':')[1].split('-')[0] * 120 - 120,
				65 + i.split(':')[1].split('-')[1] * 120 - 120
			);
			updated.push(i.split(':')[0] + ':' + i.split(':')[1] + ':' + (i.split(':')[2] - 1));
		}
	}
	animations = [...updated];

	// show tower buying
	if (GAME.context === 2) {
		image(VISUALS.buildings.canon[4], 1142, 500, 140, 140);
		text(DATA.building.canon.price, 1212, 650);

		image(VISUALS.buildings.mini_canon[4], 1403, 500, 140, 140);
		text(DATA.building.mini_canon.price, 1473, 650);

		image(VISUALS.buildings.tesla[4], 1664, 500, 140, 140);
		text(DATA.building.tesla.price, 1734, 650);

		image(VISUALS.buildings.poisoner[4], 1142, 674, 140, 140);
		text(DATA.building.poisoner.price, 1212, 824);

		image(VISUALS.buildings.sniper[4], 1403, 674, 140, 140);
		text(DATA.building.sniper.price, 1473, 824);

		image(VISUALS.buildings.inferno[4], 1664, 674, 140, 140);
		text(DATA.building.inferno.price, 1734, 824);

		image(VISUALS.buildings.mortar[4], 1142, 848, 140, 140);
		text(DATA.building.inferno.price, 1212, 998);

		image(VISUALS.buildings.laser[4], 1403, 848, 140, 140);
		text(DATA.building.laser.price, 1473, 998);

		image(VISUALS.buildings.radar[4], 1664, 848, 140, 140);
		text(DATA.building.radar.price, 1734, 998);
	}

	// show tower menu
	else if (GAME.context === 4) {
		let tower = GAME.map[GAME.selected.x + 1][GAME.selected.y + 1];
		let tower_data = DATA.building[tower.name];

		if (typeof tower.levels.speed != 'boolean') {
			text('UPGRADE\nSPEED', 1212, 575);
			image(VISUALS.buildings[tower.name][6], 1142, 690, 140, 140);
			image(VISUALS.elements.upgrade, 1142, 690, 140, 140);
			if (tower.levels.speed < 6) {
				text('- ' + (tower_data.price / 2) * (tower.levels.speed + 1) + '$', 1212, 836);
				text(
					(tower_data.speed + (tower_data.speed / 4) * tower.levels.speed).toFixed(2) +
						'>' +
						(tower_data.speed + (tower_data.speed / 4) * (tower.levels.speed + 1)).toFixed(2) +
						'\nLVL: ' +
						tower.levels.speed +
						'/6',
					1212,
					923
				);
			} else {
				text((tower_data.speed + (tower_data.speed / 4) * tower.levels.speed).toFixed(2) + '\nLVL: 6/6', 1212, 923);
			}
		}
		text('SELL\nTOWER', 1473, 575);
		if (typeof tower.levels.damage != 'boolean') {
			text('UPGRADE\nDAMAGE', 1734, 575);
			image(VISUALS.buildings[tower.name][6], 1664, 690, 140, 140);
			image(VISUALS.elements.upgrade, 1664, 690, 140, 140);
			if (tower.levels.damage < 6) {
				text('- ' + (tower_data.price / 2) * (tower.levels.damage + 1) + '$', 1734, 836);
				text(
					(tower_data.damage + (tower_data.damage / 4) * tower.levels.damage).toFixed(2) +
						'>' +
						(tower_data.damage + (tower_data.damage / 4) * (tower.levels.damage + 1)).toFixed(2) +
						'\nLVL: ' +
						tower.levels.damage +
						'/6',
					1734,
					923
				);
			} else {
				text((tower_data.damage + (tower_data.damage / 4) * tower.levels.damage).toFixed(2) + '\nLVL: 6/6', 1734, 923);
			}
		}

		image(VISUALS.buildings[tower.name][6], 1403, 690, 140, 140);

		image(VISUALS.elements.cross, 1403, 690, 140, 140);

		text(
			parseInt(
				tower_data.price +
					((tower.levels.speed * tower_data.price) / 2 +
						tower_data.price * ((tower.levels.speed * tower.levels.speed) / 2) +
						((tower.levels.damage * tower_data.price) / 2 +
							tower_data.price * ((tower.levels.damage * tower.levels.damage) / 2))) /
						4
			) + '$',
			1473,
			836
		);

		fill('#FF0000');
		if (tower.name == 'mortar') {
			text('SELECT\nTARGET', 1473, 923);
			if (tower.active_target) {
				image(
					VISUALS.elements.cross,
					75 + (tower.active_target.split('-')[0] - 1) * 120,
					75 + (tower.active_target.split('-')[1] - 1) * 120,
					60,
					60
				);
			}
		} else if (tower.name == 'laser') {
			text('ROTATE\nTOWER', 1473, 923);
		}
		noFill();
		stroke('#000000');
		circle(105 + GAME.selected.x * 120, 105 + GAME.selected.y * 120, parseFloat(tower_data.range) * 240);
		noStroke();
		fill('#000000');
	}

	// start waves / spawn enemies
	if (typeof GAME.enemies_left == 'undefined') {
		GAME.context = 6;
		draw_loop = false;
		GAME.win = true;
		return;
	}
	if (GAME.enemies_left.length === 0) {
		GAME.wave++;
		GAME.enemies_left = DATA.wave[GAME.wave];
	} else if (GAME.spawn_cooldown <= 0) {
		let item = GAME.enemies_left.shift();
		if (typeof item === 'string') {
			GAME.enemies.push({
				type: item,
				coords: '1-9',
				target: GAME.map_data.path[0],
				facing: 'up',
				health: DATA.enemy[item].health
			});
		} else if (typeof item === 'number') {
			GAME.spawn_cooldown = item;
		} else {
			console.log(item);
		}
	} else {
		GAME.spawn_cooldown -= 0.02 * GAME.wave_speed;
	}

	// fire towers and update properties
	for (let i of Object.keys(GAME.map)) {
		for (let j of Object.keys(GAME.map[i])) {
			let tower = GAME.map[i][j];
			if (tower) {
				let tower_data = DATA.building[tower.name];
				tower.targetted = tower.targetted || [];
				if (tower.cooldown <= 0) {
					let fired = false;
					for (let k of GAME.enemies) {
						if (
							Math.pow(Math.abs(k.coords.split('-')[0] - i), 2) + Math.pow(Math.abs(k.coords.split('-')[1] - j), 2) <
								Math.pow(tower_data.range, 2) &&
							(!tower.targetted.includes(k) || tower.name == 'laser')
						) {
							if (tower.name == 'inferno' && k.type != 'boss_goon' && k.type != 'mega_goon') {
								if (tower.active_target === false) {
									tower.active_target = k.coords;
								} else if (k.coords != tower.active_target) {
									continue;
								}
								k.freeze = true;
							} else if (tower.name == 'mortar') {
								if (typeof tower.active_target !== 'string') {
									break;
								}
								animations.push('explosion:' + tower.active_target + ':' + '5');
								tower.cooldown = 50 / (tower_data.speed + tower.levels.speed * tower_data.speed * 0.25);
								if (
									!(
										Math.abs(k.coords.split('-')[0] - tower.active_target.split('-')[0]) < 0.5 &&
										Math.abs(k.coords.split('-')[1] - tower.active_target.split('-')[1]) < 0.5
									)
								) {
									continue;
								}
							} else if (tower.name == 'laser') {
								stroke('#00FFFF');
								switch (8 - tower.angle) {
									case 2:
										line(
											105 + i * 120 - 120,
											105 + j * 120 - 120,
											105 + i * 120 - 120,
											105 + j * 120 - 120 + 120 * (8 - j)
										);
										break;

									case 4:
										line(
											105 + i * 120 - 120,
											105 + j * 120 - 120,
											105 + i * 120 - 120 - 120 * (i - 1),
											105 + j * 120 - 120
										);
										break;

									case 6:
										line(
											105 + i * 120 - 120,
											105 + j * 120 - 120,
											105 + i * 120 - 120,
											105 + j * 120 - 120 - 120 * (j - 1)
										);
										break;

									case 8:
										line(
											105 + i * 120 - 120,
											105 + j * 120 - 120,
											105 + i * 120 - 120 + 120 * Math.min(8 - i),
											105 + j * 120 - 120
										);
										break;
								}
								noStroke();
								let angle = (Math.atan2(k.coords.split('-')[1] - j, k.coords.split('-')[0] - i) * 180) / Math.PI;
								angle < 0 ? (angle = 360 - (angle + 360)) : (angle = 360 - angle);
								if (!(tower.angle * 45 - 5 < angle && tower.angle * 45 + 5 > angle)) {
									if (tower.targetted.includes(k)) {
										tower.targetted.splice(tower.targetted.indexOf(k), 1);
									}
									continue;
								}
								if (tower.targetted.includes(k)) {
									continue;
								}
							} else if (tower.name == 'radar') {
								if (k.type != 'boss_goon') {
									k.stall = 10;
								} else {
									k.stall = 5;
								}
							}
							if (tower.name != 'laser') {
								tower.angle = angle_translation(
									(Math.atan2(k.coords.split('-')[1] - j, k.coords.split('-')[0] - i) * 180) / Math.PI - 45
								);
							}
							if (tower.name == 'inferno') {
								stroke('#FF7F00');
								line(
									105 + i * 120 - 120,
									105 + j * 120 - 120,
									105 + k.coords.split('-')[0] * 120 - 120,
									105 + k.coords.split('-')[1] * 120 - 120
								);
								noStroke();
							}
							tower.remaining_targets--;
							tower.targetted.push(k);
							if (tower.animation != 'none') {
								animations.push(tower.animation + ':' + k.coords + ':' + '5');
							}
							k.health -= tower_data.damage + tower.levels.damage * tower_data.damage * 0.25;
							fired = true;
							if (tower.remaining_targets <= 0) {
								break;
							}
						}
					}
					if (fired) {
						tower.cooldown = 50 / (tower_data.speed + tower.levels.speed * tower_data.speed * 0.25);
						tower.remaining_targets = tower_data.targets;
						tower.targetted = [];
					} else if (tower.name == 'inferno') {
						tower.active_target = false;
					}
				} else {
					tower.cooldown--;
				}
			}
		}
	}
}

function move_enemies() {
	for (let i of GAME.enemies) {
		if (i.freeze) {
			continue;
		}
		if (i.stall) {
			i.stall--;
			continue;
		}
		let enemy_x = parseInt(i.coords.split('-')[0] * 40) / 40;
		let enemy_y = parseInt(i.coords.split('-')[1] * 40) / 40;
		let target_x = parseInt(i.target.split('-')[0] * 40) / 40;
		let target_y = parseInt(i.target.split('-')[1] * 40) / 40;
		if (enemy_x < target_x) {
			i.coords = (enemy_x + 0.05 * DATA.enemy[i.type].speed).toFixed(2) + '-' + enemy_y;
			i.facing = 'right';
		} else if (enemy_x > target_x) {
			i.coords = (enemy_x - 0.05 * DATA.enemy[i.type].speed).toFixed(2) + '-' + enemy_y;
			i.facing = 'left';
		} else if (enemy_y < target_y) {
			i.coords = enemy_x + '-' + (enemy_y + 0.05 * DATA.enemy[i.type].speed).toFixed(2);
			i.facing = 'down';
		} else if (enemy_y > target_y) {
			i.coords = enemy_x + '-' + (enemy_y - 0.05 * DATA.enemy[i.type].speed).toFixed(2);
			i.facing = 'up';
		} else {
			if (enemy_x == 8 && enemy_y == 8) {
				GAME.lives--;
				GAME.enemies.splice(GAME.enemies.indexOf(i), 1);
			} else {
				i.target = GAME.map_data.path[GAME.map_data.path.indexOf(i.target) + 1];
			}
		}
	}
}

function mousePressed() {
	if (GAME.context === 0) {
		if (mouseX > 105 && mouseX < 605 && mouseY > 200 && mouseY < 700) {
			GAME.image = VISUALS.maps.arches;
			GAME.map_data = DATA.map.arches;
			draw_loop = true;
		} else if (mouseX > 710 && mouseX < 1210 && mouseY > 200 && mouseY < 700) {
			GAME.image = VISUALS.maps.labyrinth;
			GAME.map_data = DATA.map.labyrinth;
			draw_loop = true;
		} else if (mouseX > 1315 && mouseX < 1815 && mouseY > 200 && mouseY < 700) {
			GAME.image = VISUALS.maps.snake;
			GAME.map_data = DATA.map.snake;
			draw_loop = true;
		} else if (mouseX > 736 && mouseX < 885 && mouseY > 875 && mouseY < 1025) {
			GAME.wave_speed = 1;
			setup();
		} else if (mouseX > 886 && mouseX < 1035 && mouseY > 875 && mouseY < 1025) {
			GAME.wave_speed = 2;
			setup();
		} else if (mouseX > 1036 && mouseX < 1186 && mouseY > 875 && mouseY < 1025) {
			GAME.wave_speed = 4;
			setup();
		} else {
			return;
		}
	}
	if (mouseX < 1050 && (mouseX - 65) % 120 < 81 && (mouseY - 65) % 120 < 81) {
		if (!GAME.mortar_target_select) {
			GAME.selected.x = (mouseX - 65 - ((mouseX - 65) % 120)) / 120;
			GAME.selected.y = (mouseY - 65 - ((mouseY - 65) % 120)) / 120;
			GAME.selected.disabled = false;
		} else {
			GAME.map[GAME.selected.x + 1][GAME.selected.y + 1].active_target =
				(mouseX - 65 - ((mouseX - 65) % 120)) / 120 + 1 + '-' + ((mouseY - 65 - ((mouseY - 65) % 120)) / 120 + 1);
			GAME.mortar_target_select = false;
		}
	}
	if (GAME.context === 2) {
		if (mouseX > 1090 && mouseX < 1332) {
			if (mouseY > 512 && mouseY < 667) {
				if (GAME.money >= DATA.building.canon.price) {
					GAME.money -= DATA.building.canon.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'canon',
						angle: 0,
						remaining_targets: 0,
						cooldown: 0,
						animation: 'explosion',
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			} else if (mouseY > 686 && mouseY < 841) {
				if (GAME.money >= DATA.building.poisoner.price) {
					GAME.money -= DATA.building.poisoner.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'poisoner',
						angle: 0,
						remaining_targets: 1000,
						cooldown: 0,
						animation: 'poison',
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			} else if (mouseY > 860 && mouseY < 1015) {
				if (GAME.money >= DATA.building.mortar.price) {
					GAME.money -= DATA.building.mortar.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'mortar',
						angle: 0,
						remaining_targets: 1000,
						cooldown: 0,
						animation: 'fire',
						active_target: false,
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			}
		} else if (mouseX > 1351 && mouseX < 1593) {
			if (mouseY > 512 && mouseY < 667) {
				if (GAME.money >= DATA.building.mini_canon.price) {
					GAME.money -= DATA.building.mini_canon.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'mini_canon',
						angle: 0,
						remaining_targets: 0,
						cooldown: 0,
						animation: 'explosion',
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			} else if (mouseY > 686 && mouseY < 841) {
				if (GAME.money >= DATA.building.sniper.price) {
					GAME.money -= DATA.building.sniper.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'sniper',
						angle: 0,
						remaining_targets: 0,
						cooldown: 0,
						animation: 'explosion',
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			} else if (mouseY > 860 && mouseY < 1015) {
				if (GAME.money >= DATA.building.laser.price) {
					GAME.money -= DATA.building.laser.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'laser',
						angle: 0,
						remaining_targets: 0,
						cooldown: 0,
						animation: 'zap',
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			}
		} else if (mouseX > 1612 && mouseX < 1845) {
			if (mouseY > 512 && mouseY < 667) {
				if (GAME.money >= DATA.building.tesla.price) {
					GAME.money -= DATA.building.tesla.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'tesla',
						angle: 0,
						remaining_targets: 0,
						cooldown: 0,
						animation: 'zap',
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			} else if (mouseY > 686 && mouseY < 841) {
				if (GAME.money >= DATA.building.inferno.price) {
					GAME.money -= DATA.building.inferno.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'inferno',
						angle: 0,
						remaining_targets: 0,
						cooldown: 0,
						animation: 'fire',
						active_target: false,
						levels: {
							speed: false,
							damage: 0
						}
					};
				} else {
					return;
				}
			} else if (mouseY > 860 && mouseY < 1015) {
				if (GAME.money >= DATA.building.radar.price) {
					GAME.money -= DATA.building.radar.price;
					GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = {
						name: 'radar',
						angle: 0,
						remaining_targets: 0,
						cooldown: 0,
						animation: 'zap',
						levels: {
							speed: 0,
							damage: 0
						}
					};
				} else {
					return;
				}
			}
		}
	} else if (GAME.context === 4) {
		let tower = GAME.map[GAME.selected.x + 1][GAME.selected.y + 1];
		if (mouseX > 1090 && mouseX < 1332 && mouseY > 686 && mouseY < 841) {
			if (GAME.money >= (DATA.building[tower.name].price / 2) * (tower.levels.speed + 1) && tower.levels.speed < 6) {
				GAME.money -= (DATA.building[tower.name].price / 2) * (tower.levels.speed + 1);
				tower.levels.speed++;
			}
		} else if (mouseX > 1351 && mouseX < 1593 && mouseY > 686 && mouseY < 841) {
			let tower_data = DATA.building[tower.name];
			if (!tower.levels.speed) {
				tower.levels.speed = 0;
			}
			if (!tower.levels.damage) {
				tower.levels.damage = 0;
			}
			GAME.money += parseInt(
				tower_data.price +
					((tower.levels.speed * tower_data.price) / 2 +
						tower_data.price * ((tower.levels.speed * tower.levels.speed) / 2) +
						((tower.levels.damage * tower_data.price) / 2 +
							tower_data.price * ((tower.levels.damage * tower.levels.damage) / 2))) /
						4
			);
			GAME.map[GAME.selected.x + 1][GAME.selected.y + 1] = false;
		} else if (mouseX > 1612 && mouseX < 1845 && mouseY > 686 && mouseY < 841) {
			if (GAME.money >= (DATA.building[tower.name].price / 2) * (tower.levels.damage + 1) && tower.levels.damage < 6) {
				GAME.money -= (DATA.building[tower.name].price / 2) * (tower.levels.damage + 1);
				tower.levels.damage++;
			}
		} else if (mouseX > 1351 && mouseX < 1593 && mouseY > 860 && mouseY < 1015) {
			if (tower.name == 'mortar') {
				GAME.mortar_target_select = true;
			} else if (tower.name == 'laser') {
				tower.angle === 6 ? (tower.angle = 0) : (tower.angle += 2);
			}
		}
	}
}
